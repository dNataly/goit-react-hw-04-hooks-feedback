{"version":3,"sources":["Statistics/Statistics.module.css","Statistics/Notification/Notification.module.css","FeedbackOptions/FeedbackOptions.module.css","FeedbackOptions/FeedbackOptions.js","Statistics/Statistics.js","Section/Section.js","Statistics/Notification/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","option","index","name","onClick","Statistics","total","positiveFeedbackPercentage","good","bad","neutral","className","s","statList","statListItem","Section","title","children","Notification","message","notification","App","useState","setGood","setNeutral","setBad","countTotalFeedback","e","buttonName","currentTarget","prevState","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,SAAW,+B,mBCA7BD,EAAOC,QAAU,CAAC,aAAe,qC,wDCAjCD,EAAOC,QAAU,CAAC,aAAe,wC,6GCmBlBC,MAjBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,8BACKD,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACT,wBAAoBC,KAAMF,EAAQG,QAASL,EAA3C,SACKE,GADQC,S,gBCuBVG,MA3Bf,YAAwF,IAAD,IAAjEC,aAAiE,MAAzD,EAAyD,MAAtDC,kCAAsD,MAAzB,EAAyB,EAAtBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,QAC1E,OACE,gCACE,qBAAIC,UAAWC,IAAEC,SAAjB,UACE,qBAAIF,UAAWC,IAAEE,aAAjB,mBACQ,sBAAMH,UAAU,cAAhB,SAA+BH,OAEvC,qBAAIG,UAAWC,IAAEE,aAAjB,sBACW,sBAAMH,UAAU,cAAhB,SAA+BD,OAE1C,qBAAIC,UAAWC,IAAEE,aAAjB,kBACO,sBAAMH,UAAU,cAAhB,SAA+BF,UAIxC,wCAAWH,KACX,oDAAuBC,EAAvB,WCJSQ,MAbf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,gCACGD,GAAS,6BAAKA,IACdC,M,gBCCQC,MAJf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGR,UAAWC,IAAEQ,aAAhB,SAA+BD,KCGzB,SAASE,IACpB,MAAwBC,mBAAS,GAAjC,mBAAOd,EAAP,KAAae,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOZ,EAAP,KAAgBc,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOb,EAAP,KAAYgB,EAAZ,KAuBIC,EAAqB,WACzB,OAAOlB,EAAOE,EAAUD,GAQlBH,EAAQoB,IAId,OACE,sBAAKf,UAAU,qBAAf,UACE,cAAC,EAAD,CAASK,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBlB,QANP,CAAC,OAAQ,MAAO,WAMSC,gBArCvB,SAAA4B,GAChB,IAAMC,EAAaD,EAAEE,cAAc1B,KAEhB,SAAfyB,EAKe,YAAfA,EAKe,QAAfA,GACAH,GAAO,SAAAK,GAAS,OAAIA,EAAY,KALhCN,GAAW,SAAAM,GAAS,OAAIA,EAAY,KALpCP,GAAQ,SAAAO,GAAS,OAAIA,EAAY,UAmCnC,cAAC,EAAD,CAASd,MAAM,aAAf,SAA6BV,EAAQ,EAAI,cAAC,EAAD,CAAaE,KAAMA,EACNE,QAASA,EACTD,IAAKA,EAAKH,MAAOA,EAAOC,2BAhB5C,WACtC,IAAMD,EAAQoB,IACd,OAAOpB,EAAQ,EAAIyB,KAAKC,MAAOxB,EAAKF,EAAS,KAAO,EAc0D2B,KAAwC,cAAC,EAAD,CAAcd,QAAQ,4BChDhLe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1b8f5e10.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"Statistics_statList__1wBuk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1Kzpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controlsItem\":\"FeedbackOptions_controlsItem__enJmH\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n        {options.map((option, index) => (\r\n            <button key={index} name={option} onClick={onLeaveFeedback}>\r\n                {option}\r\n            </button>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.css\";\r\n\r\nfunction Statistics({ total = 0, positiveFeedbackPercentage = 0, good, bad, neutral }) {\r\n  return (\r\n    <div>\r\n      <ul className={s.statList}>\r\n        <li className={s.statListItem}>\r\n          Good: <span className=\"statCounter\">{good}</span>\r\n        </li>\r\n        <li className={s.statListItem}>\r\n          Neutral: <span className=\"statCounter\">{neutral}</span>\r\n        </li>\r\n        <li className={s.statListItem}>\r\n          Bad: <span className=\"statCounter\">{bad}</span>\r\n        </li>\r\n      </ul>\r\n\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback: {positiveFeedbackPercentage}%</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  options: PropTypes.object,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <div>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport s from \"./Notification.module.css\";\r\n\r\nfunction Notification({ message }) {\r\n  return <p className={s.notification}>{message}</p>;\r\n}\r\n\r\nexport default Notification;\r\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./Statistics/Statistics\";\nimport Section from \"./Section/Section\";\nimport Notification from \"./Statistics/Notification/Notification\";\n\nexport default function App () {\n    const [good, setGood] = useState(0);\n    const [neutral, setNeutral] = useState(0);\n    const [bad, setBad] = useState(0);\n\n  const setFeedback = e => {\n      const buttonName = e.currentTarget.name;\n\n      if (buttonName === 'good') {\n          setGood(prevState => prevState + 1);\n          return;\n      }\n\n      if (buttonName === 'neutral') {\n          setNeutral(prevState => prevState + 1);\n          return;\n      }\n\n      if (buttonName === 'bad') {\n          setBad(prevState => prevState + 1);\n          return;\n      }\n      return;\n  };\n\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    return total > 0 ? Math.round((good/total) * 100) : 0;\n  };\n\n    const total = countTotalFeedback();\n    const options = ['good', 'bad', 'neutral'];\n\n\n    return (\n      <div className=\"Feedback-container\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={options} onLeaveFeedback={setFeedback} />\n        </Section>\n        <Section title=\"Statistics\">{total > 0 ? <Statistics  good={good}\n                                                              neutral={neutral}\n                                                              bad={bad} total={total} positiveFeedbackPercentage={countPositiveFeedbackPercentage()} /> : <Notification message=\"No feedback given.\" />}</Section>\n      </div>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}